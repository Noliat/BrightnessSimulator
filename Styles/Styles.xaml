<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--Hyperlink persoalizado -->
    <!--Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"-->
    <Style x:Key="HyperlinkStyle" TargetType="Hyperlink">
        <Setter Property="Foreground" Value="{DynamicResource HyperlinkForegroundBrush}"/>
        <!-- Cor padrão -->
        <Setter Property="TextDecorations" Value="None"/>
        <!-- Remove sublinhado -->
        <Style.Triggers>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
                <!-- Cor ao passar o mouse -->
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#6c6c6c"/>
                <!-- Cor ao clicar -->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
    </Style>

    <!-- Definindo o estilo para Border com Blur Effect -->
    <Style x:Key="BlurredBorderStyle" TargetType="Border">
        <Setter Property="Effect">
            <Setter.Value>
                <BlurEffect Radius="0.15"/>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Definindo o estilo para Border com Blur Effect -->
    <Style x:Key="BlurredBorderStyle1" TargetType="Border">
        <!-- Definindo o efeito de Blur -->
        <Setter Property="Effect">
            <Setter.Value>
                <BlurEffect Radius="15"/>
            </Setter.Value>
        </Setter>

        <!-- Adicionando uma cor de preenchimento semi-transparente para simular o acrílico -->
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource AcrylicBrush.Light}" />
            </Setter.Value>
        </Setter>

        <!-- Aplicando uma máscara de opacidade para simular o efeito de transparência variável -->
        <Setter Property="OpacityMask">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#FFFFFFFF" Offset="0.0" />
                    <GradientStop Color="#00FFFFFF" Offset="1.0" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>